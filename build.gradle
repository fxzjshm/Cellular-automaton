buildscript {
    repositories {
        mavenLocal()
        if(System.getProperty("user.country").equals("CN")){
            maven { url "https://maven.aliyun.com/repository/central/" }
            maven { url "https://maven.aliyun.com/repository/google" }
        }else{
            mavenCentral()
            google()
        }
        // maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
        classpath 'org.wisepersist:gwt-gradle-plugin:1.0.13'
        classpath 'com.android.tools.build:gradle:3.0.0'
        classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.3.9'
        classpath 'org.multi-os-engine:moe-gradle:1.3.6'
        classpath 'net.sf.proguard:proguard-gradle:6.0.3'
        classpath 'org.akhikhl.gretty:gretty:2.0.0'
    }
}
allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "Cellular Automaton"
        gdxVersion = '1.9.10'
        lwjglVersion = '3.2.1'
        roboVMVersion = '2.3.9'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
        // svg2pixmapVersion = '0.0.1-SNAPSHOT'
    }

    repositories {
        mavenLocal()
        if(System.getProperty("user.country") == "CN"){
            maven { url "https://maven.aliyun.com/repository/central/" }
            maven { url "https://maven.aliyun.com/repository/google" }
        }else{
            mavenCentral()
            google()
        }
        // maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        // maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}
project(":desktop") {
    apply plugin: "java"


    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        implementation "org.lwjgl:lwjgl-opencl:$lwjglVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}
project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
    }
}
project(":ios") {
    apply plugin: "java"
    apply plugin: "robovm"


    dependencies {
        implementation project(":core")
        implementation "com.mobidevelop.robovm:robovm-rt:$roboVMVersion"
        implementation "com.mobidevelop.robovm:robovm-cocoatouch:$roboVMVersion"
        implementation "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
    }
}
project(":html") {
    apply plugin: "gwt"
    apply plugin: "war"


    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        implementation "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
        // compile "io.github.fxzjshm.gdx.svg2pixmap:gdx-svg2pixmap-core:$svg2pixmapVersion:sources"
    }
}
project(":core") {
    apply plugin: "java"


    dependencies {
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        // compile "io.github.fxzjshm.gdx.svg2pixmap:gdx-svg2pixmap-core:$svg2pixmapVersion"
    }
}
project(":ios-moe") {
    apply plugin: "moe"

    configurations { natives }

    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-moe:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
    }
}
tasks.eclipse.doLast {
    delete ".project"
}
dependencies {
}